{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to FinMind \u00b6 FinMind is about Financial Data, Visualize and Mining. Introduce \u00b6 Stocks are financial products that most people are familiar with. The stock price will be affected by many factors, including central bank interest rates, exchange rates, raw material prices, and international oil prices. Similarly, other financial products will interact with each other. If we conduct a holistic financial analysis, we can not only look at a single piece of data, but also extract valuable information from it. The following will introduce our products.","title":"Overview"},{"location":"#welcome-to-finmind","text":"FinMind is about Financial Data, Visualize and Mining.","title":"Welcome to FinMind"},{"location":"#introduce","text":"Stocks are financial products that most people are familiar with. The stock price will be affected by many factors, including central bank interest rates, exchange rates, raw material prices, and international oil prices. Similarly, other financial products will interact with each other. If we conduct a holistic financial analysis, we can not only look at a single piece of data, but also extract valuable information from it. The following will introduce our products.","title":"Introduce"},{"location":"quickstart/","text":"Quick start with FinMind Finance data API \u00b6 \u5e0c\u671b\u900f\u904e\u5982\u4e0b\u8aaa\u660e\uff0c\u53ef\u4ee5\u5feb\u901f\u4e86\u89e3 FinMind data api \u4f7f\u7528\u65b9\u5f0f FinMind data api \u4e3b\u8981\u6709\u4e09\u7a2e\u985e\u578b API \u00b6 \u7372\u53d6\u8cc7\u6599 API \u6839\u64da\u4f60\u60f3\u4f7f\u7528\u7684\u8cc7\u6599\u96c6\u4f86\u7372\u53d6\u8cc7\u6599\uff0c\u4f8b\u5982\u60f3\u8981\u67e5\u8a62\u53f0\u7063\u80a1\u7968\u5e02\u5834\u500b\u80a1\u7684\u50f9\u683c\uff0c\u5c31\u53ef\u4ee5\u900f\u904e TaiwanStockPrice \u8cc7\u6599\u96c6\u4f86\u67e5\u8a62 url: http://api.finmindtrade.com/api/v2/data \u67e5\u8a62\u8cc7\u6599\u53c3\u6578\u6e05\u55ae API \u6bcf\u500b\u8cc7\u6599\u96c6\u90fd\u6703\u6709\u4e00\u4e9b\u53c3\u6578\u9700\u8981\u4f5c\u9078\u64c7\uff0c\u5982\u679c\u4e0d\u77e5\u9053\u53c3\u6578\u6578\u503c\u6709\u54ea\u4e9b\u53ef\u4ee5\u505a\u9078\u64c7\uff0c \u53ef\u4ee5\u4f7f\u7528\u9019\u500b API \u4f86\u5e6b\u52a9\u4f60\u4e86\u89e3\uff0c\u4f8b\u5982\u4f60\u4e0d\u77e5\u9053\u532f\u7387\u8cc7\u6599\u6709\u54ea\u4e9b\u5e63\u5225\uff0c \u53ea\u8981\u8cc7\u6599\u96c6\u9078\u64c7 TaiwanExchangeRate \u5c31\u53ef\u4ee5\u900f\u904e\u9019 API \u4f86\u67e5\u8a62\u76ee\u524d\u8ddf\u53f0\u5e63\u514c\u63db\u7684\u5e63\u5225 url: http://api.finmindtrade.com/api/v2/datalist \u67e5\u8a62\u6b04\u4f4d\u540d\u7a31\u4e2d\u82f1\u5c0d\u7167 API \u6709\u4e9b\u8cc7\u6599\u96c6\u6b04\u4f4d\u540d\u7a31\u53ef\u80fd\u53ea\u6709\u82f1\u6587\u800c\u4e14\u540d\u7a31\u76f8\u5c0d\u8907\u96dc\u96e3\u61c2\uff0c\u53ef\u4ee5\u900f\u904e\u9019 API \u4f86\u67e5\u8a62\u5176\u4e2d\u6587\u540d\u7a31\uff0c \u4f8b\u5982\u8cc7\u7522\u8ca0\u50b5\u8868\u4e2d AccountsPayable \uff0c\u900f\u904e\u9019 API \u5f97\u77e5\u4e2d\u6587\u53eb \u61c9\u4ed8\u5e33\u6b3e \uff0c\u85c9\u6b64\u4f86\u5e6b\u52a9\u4f60\u4e86\u89e3\u8cc7\u6599 url: http://api.finmindtrade.com/api/v2/translation API \u63cf\u8ff0 \u00b6 \u7372\u53d6\u8cc7\u6599 API \u00b6 GET: http://api.finmindtrade.com/api/v2/data \u8acb\u6c42\u53c3\u6578: \u53c3\u6578\u540d\u7a31 \u53c3\u6578\u578b\u5225 \u5fc5\u586b \u8aaa\u660e dataset str Y \u8cc7\u6599\u96c6\u540d\u7a31 stock_id str Y \u80a1\u7968\u4ee3\u78bc data_id str N \u975e\u80a1\u7968\u4ee3\u78bc\u4ee5\u5916\u7684\u4ee3\u78bc\uff0c\u4f8b\u5982:\u532f\u7387\u5e63\u5225\uff0c\u5229\u7387\u592e\u884c...\u7b49 date str N \u8d77\u59cb\u6642\u9593\uff0c\u5982\u679c\u8ddf end_date \u4e00\u8d77\u4f7f\u7528\uff0c\u6703\u8f38\u51fa date \u5230 end_date \u6642\u9593\u7684\u8cc7\u6599\uff0c\u53cd\u4e4b\u6703\u8f38\u51fa\u5230\u6700\u65b0\u7684\u8cc7\u6599\uff0cdate \u548c end_date \u81f3\u5c11\u5247\u4e00\u4f7f\u7528 end_date str N \u7d50\u675f\u6642\u9593\uff0c\u5982\u679c\u8ddf date \u4e00\u8d77\u4f7f\u7528\uff0c\u6703\u8f38\u51fa date \u5230 end_date \u6642\u9593\u7684\u8cc7\u6599\uff0c\u53cd\u4e4b\u6703\u8f38\u51fa\u5230 end_date \u7684\u8cc7\u6599\uff0cdate \u548c end_date \u81f3\u5c11\u5247\u4e00\u4f7f\u7528 user_id str N \u4f7f\u7528\u8005 id \uff0c\u7533\u8fa6\u5e33\u865f\u53ef\u4ee5\u4f7f\u7528\u66f4\u591a\u7528\u91cf\u5594\uff0c\u5feb\u4f86 \u7533\u8acb \u5427! password str N \u4f7f\u7528\u8005\u5bc6\u78bc\uff0c\u7533\u8fa6\u5e33\u865f\u53ef\u4ee5\u4f7f\u7528\u66f4\u591a\u7528\u91cf\u5594\uff0c\u5feb\u4f86 \u7533\u8acb \u5427! \u67e5\u8a62\u8cc7\u6599\u53c3\u6578\u6e05\u55ae API \u00b6 GET: http://api.finmindtrade.com/api/v2/datalist? \u8acb\u6c42\u53c3\u6578: \u53c3\u6578\u540d\u7a31 \u53c3\u6578\u578b\u5225 \u5fc5\u586b \u8aaa\u660e dataset str Y \u8cc7\u6599\u96c6\u540d\u7a31 user_id str N \u4f7f\u7528\u8005 id \uff0c\u7533\u8fa6\u5e33\u865f\u53ef\u4ee5\u4f7f\u7528\u66f4\u591a\u7528\u91cf\u5594\uff0c\u5feb\u4f86 \u7533\u8acb \u5427! password str N \u4f7f\u7528\u8005\u5bc6\u78bc\uff0c\u7533\u8fa6\u5e33\u865f\u53ef\u4ee5\u4f7f\u7528\u66f4\u591a\u7528\u91cf\u5594\uff0c\u5feb\u4f86 \u7533\u8acb \u5427! \u67e5\u8a62\u6b04\u4f4d\u540d\u7a31\u4e2d\u82f1\u5c0d\u7167 API \u00b6 GET: http://api.finmindtrade.com/api/v2/translation? \u8acb\u6c42\u53c3\u6578: \u53c3\u6578\u540d\u7a31 \u53c3\u6578\u578b\u5225 \u5fc5\u586b \u8aaa\u660e dataset str Y \u8cc7\u6599\u96c6\u540d\u7a31 user_id str N \u4f7f\u7528\u8005 id \uff0c\u7533\u8fa6\u5e33\u865f\u53ef\u4ee5\u4f7f\u7528\u66f4\u591a\u7528\u91cf\u5594\uff0c\u5feb\u4f86 \u7533\u8acb \u5427! password str N \u4f7f\u7528\u8005\u5bc6\u78bc\uff0c\u7533\u8fa6\u5e33\u865f\u53ef\u4ee5\u4f7f\u7528\u66f4\u591a\u7528\u91cf\u5594\uff0c\u5feb\u4f86 \u7533\u8acb \u5427! \u66f4\u591a\u8cc7\u6599\u76f8\u95dc\u8cc7\u8a0a\u8acb\u53c3\u8003 Data\uff0c\u6703\u6709\u66f4\u8a73\u76e1\u7684\u8aaa\u660e","title":"QuickStart"},{"location":"quickstart/#quick-start-with-finmind-finance-data-api","text":"\u5e0c\u671b\u900f\u904e\u5982\u4e0b\u8aaa\u660e\uff0c\u53ef\u4ee5\u5feb\u901f\u4e86\u89e3 FinMind data api \u4f7f\u7528\u65b9\u5f0f","title":"Quick start with FinMind Finance data API"},{"location":"quickstart/#finmind-data-api-api","text":"\u7372\u53d6\u8cc7\u6599 API \u6839\u64da\u4f60\u60f3\u4f7f\u7528\u7684\u8cc7\u6599\u96c6\u4f86\u7372\u53d6\u8cc7\u6599\uff0c\u4f8b\u5982\u60f3\u8981\u67e5\u8a62\u53f0\u7063\u80a1\u7968\u5e02\u5834\u500b\u80a1\u7684\u50f9\u683c\uff0c\u5c31\u53ef\u4ee5\u900f\u904e TaiwanStockPrice \u8cc7\u6599\u96c6\u4f86\u67e5\u8a62 url: http://api.finmindtrade.com/api/v2/data \u67e5\u8a62\u8cc7\u6599\u53c3\u6578\u6e05\u55ae API \u6bcf\u500b\u8cc7\u6599\u96c6\u90fd\u6703\u6709\u4e00\u4e9b\u53c3\u6578\u9700\u8981\u4f5c\u9078\u64c7\uff0c\u5982\u679c\u4e0d\u77e5\u9053\u53c3\u6578\u6578\u503c\u6709\u54ea\u4e9b\u53ef\u4ee5\u505a\u9078\u64c7\uff0c \u53ef\u4ee5\u4f7f\u7528\u9019\u500b API \u4f86\u5e6b\u52a9\u4f60\u4e86\u89e3\uff0c\u4f8b\u5982\u4f60\u4e0d\u77e5\u9053\u532f\u7387\u8cc7\u6599\u6709\u54ea\u4e9b\u5e63\u5225\uff0c \u53ea\u8981\u8cc7\u6599\u96c6\u9078\u64c7 TaiwanExchangeRate \u5c31\u53ef\u4ee5\u900f\u904e\u9019 API \u4f86\u67e5\u8a62\u76ee\u524d\u8ddf\u53f0\u5e63\u514c\u63db\u7684\u5e63\u5225 url: http://api.finmindtrade.com/api/v2/datalist \u67e5\u8a62\u6b04\u4f4d\u540d\u7a31\u4e2d\u82f1\u5c0d\u7167 API \u6709\u4e9b\u8cc7\u6599\u96c6\u6b04\u4f4d\u540d\u7a31\u53ef\u80fd\u53ea\u6709\u82f1\u6587\u800c\u4e14\u540d\u7a31\u76f8\u5c0d\u8907\u96dc\u96e3\u61c2\uff0c\u53ef\u4ee5\u900f\u904e\u9019 API \u4f86\u67e5\u8a62\u5176\u4e2d\u6587\u540d\u7a31\uff0c \u4f8b\u5982\u8cc7\u7522\u8ca0\u50b5\u8868\u4e2d AccountsPayable \uff0c\u900f\u904e\u9019 API \u5f97\u77e5\u4e2d\u6587\u53eb \u61c9\u4ed8\u5e33\u6b3e \uff0c\u85c9\u6b64\u4f86\u5e6b\u52a9\u4f60\u4e86\u89e3\u8cc7\u6599 url: http://api.finmindtrade.com/api/v2/translation","title":"FinMind data api \u4e3b\u8981\u6709\u4e09\u7a2e\u985e\u578b API"},{"location":"quickstart/#api","text":"","title":"API \u63cf\u8ff0"},{"location":"quickstart/#api_1","text":"GET: http://api.finmindtrade.com/api/v2/data \u8acb\u6c42\u53c3\u6578: \u53c3\u6578\u540d\u7a31 \u53c3\u6578\u578b\u5225 \u5fc5\u586b \u8aaa\u660e dataset str Y \u8cc7\u6599\u96c6\u540d\u7a31 stock_id str Y \u80a1\u7968\u4ee3\u78bc data_id str N \u975e\u80a1\u7968\u4ee3\u78bc\u4ee5\u5916\u7684\u4ee3\u78bc\uff0c\u4f8b\u5982:\u532f\u7387\u5e63\u5225\uff0c\u5229\u7387\u592e\u884c...\u7b49 date str N \u8d77\u59cb\u6642\u9593\uff0c\u5982\u679c\u8ddf end_date \u4e00\u8d77\u4f7f\u7528\uff0c\u6703\u8f38\u51fa date \u5230 end_date \u6642\u9593\u7684\u8cc7\u6599\uff0c\u53cd\u4e4b\u6703\u8f38\u51fa\u5230\u6700\u65b0\u7684\u8cc7\u6599\uff0cdate \u548c end_date \u81f3\u5c11\u5247\u4e00\u4f7f\u7528 end_date str N \u7d50\u675f\u6642\u9593\uff0c\u5982\u679c\u8ddf date \u4e00\u8d77\u4f7f\u7528\uff0c\u6703\u8f38\u51fa date \u5230 end_date \u6642\u9593\u7684\u8cc7\u6599\uff0c\u53cd\u4e4b\u6703\u8f38\u51fa\u5230 end_date \u7684\u8cc7\u6599\uff0cdate \u548c end_date \u81f3\u5c11\u5247\u4e00\u4f7f\u7528 user_id str N \u4f7f\u7528\u8005 id \uff0c\u7533\u8fa6\u5e33\u865f\u53ef\u4ee5\u4f7f\u7528\u66f4\u591a\u7528\u91cf\u5594\uff0c\u5feb\u4f86 \u7533\u8acb \u5427! password str N \u4f7f\u7528\u8005\u5bc6\u78bc\uff0c\u7533\u8fa6\u5e33\u865f\u53ef\u4ee5\u4f7f\u7528\u66f4\u591a\u7528\u91cf\u5594\uff0c\u5feb\u4f86 \u7533\u8acb \u5427!","title":"\u7372\u53d6\u8cc7\u6599 API"},{"location":"quickstart/#api_2","text":"GET: http://api.finmindtrade.com/api/v2/datalist? \u8acb\u6c42\u53c3\u6578: \u53c3\u6578\u540d\u7a31 \u53c3\u6578\u578b\u5225 \u5fc5\u586b \u8aaa\u660e dataset str Y \u8cc7\u6599\u96c6\u540d\u7a31 user_id str N \u4f7f\u7528\u8005 id \uff0c\u7533\u8fa6\u5e33\u865f\u53ef\u4ee5\u4f7f\u7528\u66f4\u591a\u7528\u91cf\u5594\uff0c\u5feb\u4f86 \u7533\u8acb \u5427! password str N \u4f7f\u7528\u8005\u5bc6\u78bc\uff0c\u7533\u8fa6\u5e33\u865f\u53ef\u4ee5\u4f7f\u7528\u66f4\u591a\u7528\u91cf\u5594\uff0c\u5feb\u4f86 \u7533\u8acb \u5427!","title":"\u67e5\u8a62\u8cc7\u6599\u53c3\u6578\u6e05\u55ae API"},{"location":"quickstart/#api_3","text":"GET: http://api.finmindtrade.com/api/v2/translation? \u8acb\u6c42\u53c3\u6578: \u53c3\u6578\u540d\u7a31 \u53c3\u6578\u578b\u5225 \u5fc5\u586b \u8aaa\u660e dataset str Y \u8cc7\u6599\u96c6\u540d\u7a31 user_id str N \u4f7f\u7528\u8005 id \uff0c\u7533\u8fa6\u5e33\u865f\u53ef\u4ee5\u4f7f\u7528\u66f4\u591a\u7528\u91cf\u5594\uff0c\u5feb\u4f86 \u7533\u8acb \u5427! password str N \u4f7f\u7528\u8005\u5bc6\u78bc\uff0c\u7533\u8fa6\u5e33\u865f\u53ef\u4ee5\u4f7f\u7528\u66f4\u591a\u7528\u91cf\u5594\uff0c\u5feb\u4f86 \u7533\u8acb \u5427! \u66f4\u591a\u8cc7\u6599\u76f8\u95dc\u8cc7\u8a0a\u8acb\u53c3\u8003 Data\uff0c\u6703\u6709\u66f4\u8a73\u76e1\u7684\u8aaa\u660e","title":"\u67e5\u8a62\u6b04\u4f4d\u540d\u7a31\u4e2d\u82f1\u5c0d\u7167 API"},{"location":"welcome/","text":"Welcome to FinMind \u00b6 FinMind is about Financial Data, Visualize and Mining. Introduce \u00b6 Stocks are financial products that most people are familiar with. The stock price will be affected by many factors, including central bank interest rates, exchange rates, raw material prices, and international oil prices. Similarly, other financial products will interact with each other. If we conduct a holistic financial analysis, we can not only look at a single piece of data, but also extract valuable information from it. The following will introduce our products. Financial Data \u00b6 More than ten kinds financial data. Every day update. Financial Visualize At least five kinds Visualize tools on every data. (In development) Financial Mining Holistic financial analysis. (In development) Getting started \u00b6 from FinMind.Data import Load import datetime date = '2018-12-13' print ( 'load TaiwanStockInfo' ) TaiwanStockInfo = Load . FinData ( dataset = 'TaiwanStockInfo' ) print ( TaiwanStockInfo [: 5 ] ) load TaiwanStockInfo stock_id stock_name kinds 0 1201 \u5473\u5168 \u98df\u54c1\u5de5\u696d 1 1203 \u5473\u738b \u98df\u54c1\u5de5\u696d 2 1210 \u5927\u6210 \u98df\u54c1\u5de5\u696d 3 1213 \u5927\u98f2 \u98df\u54c1\u5de5\u696d 4 1215 \u535c\u8702 \u98df\u54c1\u5de5\u696d print ( 'load TaiwanStockPrice {} ' . format ( TaiwanStockInfo . loc [ 2 , 'stock_id' ])) TaiwanStockPrice = Load . FinData ( dataset = 'TaiwanStockPrice' , select = TaiwanStockInfo . loc [ 2 , 'stock_id' ], #select = ['1210'], date = date ) print ( TaiwanStockPrice [: 5 ] ) load TaiwanStockPrice 1210 Open High Low Close Adj_Close Volume date stock_id 0 32.5 33.20 32.30 33.00 33.00 1668333 2018 - 12 - 13 1210 1 33.3 35.05 33.25 33.95 33.95 3916120 2018 - 12 - 14 1210 2 34.5 35.50 34.35 34.35 34.35 4543063 2018 - 12 - 17 1210 3 34.4 34.85 32.80 32.80 32.80 3726316 2018 - 12 - 18 1210 4 33.0 33.40 32.30 32.75 32.75 1887001 2018 - 12 - 19 1210 The parameter table is what dataset been load. The function FinData is load taiwan stock prices by selecting TaiwanStockInfo.loc[2,'stock_id'] and date >= '2018-12-13', or you can load some stock id like 1210 . print ( 'load GovernmentBonds list' ) GovernmentBonds_list = Load . FinDataList ( dataset = 'GovernmentBonds' ) print ( GovernmentBonds_list [: 5 ] ) print ( 'load GovernmentBonds {} ' . format ( GovernmentBonds_list [ 3 ])) GovernmentBonds = Load . FinData ( dataset = 'GovernmentBonds' , select = GovernmentBonds_list [ 3 ], date = date ) print ( GovernmentBonds [: 5 ] ) load GovernmentBonds list [ 'Canada 1-Month' , 'Canada 1-Year' , 'Canada 10-Year' , 'Canada 2-Month' , 'Canada 2-Year' ] load GovernmentBonds Canada 2 - Month date Price Open High Low ChangePercent bound_type 0 2018 - 12 - 13 1.630 1.625 1.630 1.62 0.0000 Canada 2 - Month 1 2018 - 12 - 14 1.630 1.625 1.630 1.62 0.0000 Canada 2 - Month 2 2018 - 12 - 17 1.625 1.630 1.635 1.62 - 0.0031 Canada 2 - Month 3 2018 - 12 - 18 1.625 1.630 1.630 1.62 0.0000 Canada 2 - Month 4 2018 - 12 - 19 1.625 1.620 1.625 1.62 0.0000 Canada 2 - Month The function FinDataList is load GovernmentBonds_list. The function FinData is load GovernmentBonds by selecting Canada 2-Month and date >= '2018-12-13'. more can follow deom.py in my github.","title":"Welcome to FinMind"},{"location":"welcome/#welcome-to-finmind","text":"FinMind is about Financial Data, Visualize and Mining.","title":"Welcome to FinMind"},{"location":"welcome/#introduce","text":"Stocks are financial products that most people are familiar with. The stock price will be affected by many factors, including central bank interest rates, exchange rates, raw material prices, and international oil prices. Similarly, other financial products will interact with each other. If we conduct a holistic financial analysis, we can not only look at a single piece of data, but also extract valuable information from it. The following will introduce our products.","title":"Introduce"},{"location":"welcome/#financial-data","text":"More than ten kinds financial data. Every day update. Financial Visualize At least five kinds Visualize tools on every data. (In development) Financial Mining Holistic financial analysis. (In development)","title":"Financial Data"},{"location":"welcome/#getting-started","text":"from FinMind.Data import Load import datetime date = '2018-12-13' print ( 'load TaiwanStockInfo' ) TaiwanStockInfo = Load . FinData ( dataset = 'TaiwanStockInfo' ) print ( TaiwanStockInfo [: 5 ] ) load TaiwanStockInfo stock_id stock_name kinds 0 1201 \u5473\u5168 \u98df\u54c1\u5de5\u696d 1 1203 \u5473\u738b \u98df\u54c1\u5de5\u696d 2 1210 \u5927\u6210 \u98df\u54c1\u5de5\u696d 3 1213 \u5927\u98f2 \u98df\u54c1\u5de5\u696d 4 1215 \u535c\u8702 \u98df\u54c1\u5de5\u696d print ( 'load TaiwanStockPrice {} ' . format ( TaiwanStockInfo . loc [ 2 , 'stock_id' ])) TaiwanStockPrice = Load . FinData ( dataset = 'TaiwanStockPrice' , select = TaiwanStockInfo . loc [ 2 , 'stock_id' ], #select = ['1210'], date = date ) print ( TaiwanStockPrice [: 5 ] ) load TaiwanStockPrice 1210 Open High Low Close Adj_Close Volume date stock_id 0 32.5 33.20 32.30 33.00 33.00 1668333 2018 - 12 - 13 1210 1 33.3 35.05 33.25 33.95 33.95 3916120 2018 - 12 - 14 1210 2 34.5 35.50 34.35 34.35 34.35 4543063 2018 - 12 - 17 1210 3 34.4 34.85 32.80 32.80 32.80 3726316 2018 - 12 - 18 1210 4 33.0 33.40 32.30 32.75 32.75 1887001 2018 - 12 - 19 1210 The parameter table is what dataset been load. The function FinData is load taiwan stock prices by selecting TaiwanStockInfo.loc[2,'stock_id'] and date >= '2018-12-13', or you can load some stock id like 1210 . print ( 'load GovernmentBonds list' ) GovernmentBonds_list = Load . FinDataList ( dataset = 'GovernmentBonds' ) print ( GovernmentBonds_list [: 5 ] ) print ( 'load GovernmentBonds {} ' . format ( GovernmentBonds_list [ 3 ])) GovernmentBonds = Load . FinData ( dataset = 'GovernmentBonds' , select = GovernmentBonds_list [ 3 ], date = date ) print ( GovernmentBonds [: 5 ] ) load GovernmentBonds list [ 'Canada 1-Month' , 'Canada 1-Year' , 'Canada 10-Year' , 'Canada 2-Month' , 'Canada 2-Year' ] load GovernmentBonds Canada 2 - Month date Price Open High Low ChangePercent bound_type 0 2018 - 12 - 13 1.630 1.625 1.630 1.62 0.0000 Canada 2 - Month 1 2018 - 12 - 14 1.630 1.625 1.630 1.62 0.0000 Canada 2 - Month 2 2018 - 12 - 17 1.625 1.630 1.635 1.62 - 0.0031 Canada 2 - Month 3 2018 - 12 - 18 1.625 1.630 1.630 1.62 0.0000 Canada 2 - Month 4 2018 - 12 - 19 1.625 1.620 1.625 1.62 0.0000 Canada 2 - Month The function FinDataList is load GovernmentBonds_list. The function FinData is load GovernmentBonds by selecting Canada 2-Month and date >= '2018-12-13'. more can follow deom.py in my github.","title":"Getting started"},{"location":"tutor/EuropeStock/","text":"\u5728\u6b50\u6d32\u80a1\u7968\u5e02\u5834\uff0c\u6211\u5011\u64c1\u6709 1 \u7a2e\u8cc7\u6599\u96c6\uff0c\u5982\u4e0b: \u6b50\u6d32\u80a1\u50f9\u8cc7\u6599\u8868 EuropeStockPrice \u53e6\u5916\u91dd\u5c0d\u8cc7\u6599\u96c6\u6574\u7406\u51fa\u7684\u5217\u8868\u5982\u4e0b: \u6b50\u6d32\u80a1\u7968\u6e05\u55ae\u5217\u8868 EuropeStockInfo \u6839\u64da\u4e0a\u8ff0\u8cc7\u6599\u8868\u9010\u4e00\u8aaa\u660e\u600e\u9ebc\u4f7f\u7528\uff0c\u53e6\u5916\u5177\u9ad4\u8cc7\u6599\u8868 schemas \u8acb\u53c3\u8003 finmindapi \u6b50\u6d32\u80a1\u7968\u6e05\u55ae\u5217\u8868 EuropeStockInfo \u00b6 \u9019\u5f35\u8cc7\u6599\u8868\u4e3b\u8981\u662f\u5217\u51fa\u6b50\u6d32\u6240\u6709\u4e0a\u5e02\u4e0a\u6ac3\u7684\u80a1\u7968\u540d\u7a31\uff0c\u4ee3\u78bc\u548c\u7522\u696d\u985e\u5225 import requests import pandas as pd url = 'http://api.finmindtrade.com/api/v2/data?dataset=EuropeStockInfo' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date ... stock_name 0 2019 - 01 - 14 ... 2 CRSI 1 2019 - 01 - 14 ... AP ALTERNAT ASSETS 2 2019 - 01 - 14 ... AALBERTS INDUSTR 3 2019 - 01 - 14 ... AB SCIENCE 4 2019 - 01 - 14 ... ABC ARBITRAGE \u6b50\u6d32\u80a1\u50f9\u8cc7\u6599\u8868 EuropeStockPrice \u00b6 import requests import pandas as pd url = 'http://api.finmindtrade.com/api/v2/data?dataset=EuropeStockPrice&stock_id=AALB.AS&date=2019-01-01' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) Adj_Close Close High Low Open Volume date stock_id 0 28.39 28.39 28.80 28.09 28.80 328812 2019 - 01 - 02 AALB . AS 1 27.52 27.52 28.13 27.52 28.04 271337 2019 - 01 - 03 AALB . AS 2 28.81 28.81 28.90 27.70 27.72 311458 2019 - 01 - 04 AALB . AS 3 28.82 28.82 29.16 28.46 29.10 319543 2019 - 01 - 07 AALB . AS 4 29.25 29.25 29.62 28.89 28.89 355597 2019 - 01 - 08 AALB . A","title":"EuropeStock"},{"location":"tutor/EuropeStock/#europestockinfo","text":"\u9019\u5f35\u8cc7\u6599\u8868\u4e3b\u8981\u662f\u5217\u51fa\u6b50\u6d32\u6240\u6709\u4e0a\u5e02\u4e0a\u6ac3\u7684\u80a1\u7968\u540d\u7a31\uff0c\u4ee3\u78bc\u548c\u7522\u696d\u985e\u5225 import requests import pandas as pd url = 'http://api.finmindtrade.com/api/v2/data?dataset=EuropeStockInfo' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date ... stock_name 0 2019 - 01 - 14 ... 2 CRSI 1 2019 - 01 - 14 ... AP ALTERNAT ASSETS 2 2019 - 01 - 14 ... AALBERTS INDUSTR 3 2019 - 01 - 14 ... AB SCIENCE 4 2019 - 01 - 14 ... ABC ARBITRAGE","title":"\u6b50\u6d32\u80a1\u7968\u6e05\u55ae\u5217\u8868 EuropeStockInfo"},{"location":"tutor/EuropeStock/#europestockprice","text":"import requests import pandas as pd url = 'http://api.finmindtrade.com/api/v2/data?dataset=EuropeStockPrice&stock_id=AALB.AS&date=2019-01-01' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) Adj_Close Close High Low Open Volume date stock_id 0 28.39 28.39 28.80 28.09 28.80 328812 2019 - 01 - 02 AALB . AS 1 27.52 27.52 28.13 27.52 28.04 271337 2019 - 01 - 03 AALB . AS 2 28.81 28.81 28.90 27.70 27.72 311458 2019 - 01 - 04 AALB . AS 3 28.82 28.82 29.16 28.46 29.10 319543 2019 - 01 - 07 AALB . AS 4 29.25 29.25 29.62 28.89 28.89 355597 2019 - 01 - 08 AALB . A","title":"\u6b50\u6d32\u80a1\u50f9\u8cc7\u6599\u8868 EuropeStockPrice"},{"location":"tutor/ExchangeRate/","text":"\u5728\u532f\u7387\u5e02\u5834\uff0c\u6211\u5011\u64c1\u6709 1 \u7a2e\u8cc7\u6599\u96c6\uff0c\u5982\u4e0b: \u5916\u5e63\u5c0d\u53f0\u5e63\u8cc7\u6599\u8868 TaiwanExchangeRate \u53e6\u5916\u91dd\u5c0d\u8cc7\u6599\u96c6\u6574\u7406\u51fa\u5916\u5e63\u514c\u63db\u6e05\u55ae\uff0c\u76ee\u524d\u5171\u6709 19 \u7a2e\u5e63\u5225 \u5916\u5e63\u5c0d\u53f0\u5e63\u5217\u8868 TaiwanExchangeRate \u5916\u5e63\u5c0d\u53f0\u5e63\u5217\u8868 TaiwanExchangeRate \u00b6 \u9019\u5f35\u8cc7\u6599\u8868\u4e3b\u8981\u662f\u5217\u51fa\u76ee\u524d\u5916\u5e63\u514c\u63db\u53f0\u5e63\u7684\u5e63\u5225\u6e05\u55ae import requests import pandas as pd url = \"http://api.finmindtrade.com/api/v2/datalist?dataset=TaiwanExchangeRate\" data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) 0 0 AUD 1 CAD 2 CHF 3 CNY 4 EUR \u5916\u5e63\u5c0d\u53f0\u5e63\u8cc7\u6599\u8868 TaiwanExchangeRate \u00b6 \u91dd\u5c0d USD \u505a\u793a\u7bc4 import requests import pandas as pd url = \"http://api.finmindtrade.com/api/v2/data?dataset=TaiwanExchangeRate&data_id=USD\" data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date currency cash_buy cash_sell spot_buy spot_sell 0 2006 - 01 - 02 USD 32.470 33.005 - 99.000 - 99.000 1 2006 - 01 - 03 USD 32.295 32.830 32.595 32.695 2 2006 - 01 - 04 USD 31.985 32.520 32.285 32.385 3 2006 - 01 - 05 USD 31.670 32.205 31.970 32.070 4 2006 - 01 - 06 USD 31.830 32.372 32.130 32.230","title":"ExchangeRate"},{"location":"tutor/ExchangeRate/#taiwanexchangerate","text":"\u9019\u5f35\u8cc7\u6599\u8868\u4e3b\u8981\u662f\u5217\u51fa\u76ee\u524d\u5916\u5e63\u514c\u63db\u53f0\u5e63\u7684\u5e63\u5225\u6e05\u55ae import requests import pandas as pd url = \"http://api.finmindtrade.com/api/v2/datalist?dataset=TaiwanExchangeRate\" data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) 0 0 AUD 1 CAD 2 CHF 3 CNY 4 EUR","title":"\u5916\u5e63\u5c0d\u53f0\u5e63\u5217\u8868 TaiwanExchangeRate"},{"location":"tutor/ExchangeRate/#taiwanexchangerate_1","text":"\u91dd\u5c0d USD \u505a\u793a\u7bc4 import requests import pandas as pd url = \"http://api.finmindtrade.com/api/v2/data?dataset=TaiwanExchangeRate&data_id=USD\" data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date currency cash_buy cash_sell spot_buy spot_sell 0 2006 - 01 - 02 USD 32.470 33.005 - 99.000 - 99.000 1 2006 - 01 - 03 USD 32.295 32.830 32.595 32.695 2 2006 - 01 - 04 USD 31.985 32.520 32.285 32.385 3 2006 - 01 - 05 USD 31.670 32.205 31.970 32.070 4 2006 - 01 - 06 USD 31.830 32.372 32.130 32.230","title":"\u5916\u5e63\u5c0d\u53f0\u5e63\u8cc7\u6599\u8868 TaiwanExchangeRate"},{"location":"tutor/InterestRate/","text":"\u5728\u5229\u7387\u5e02\u5834\uff0c\u6211\u5011\u64c1\u6709 1 \u7a2e\u8cc7\u6599\u96c6\uff0c\u5982\u4e0b: \u5229\u7387\u8cc7\u6599\u8868 InterestRate \u53e6\u5916\u91dd\u5c0d\u8cc7\u6599\u96c6\u6574\u7406\u51fa\u592e\u884c\u6e05\u55ae\uff0c\u76ee\u524d\u6709 12 \u570b\u592e\u884c \u5229\u7387\u8cc7\u6599\u592e\u884c\u5217\u8868 InterestRate \u5229\u7387\u8cc7\u6599\u592e\u884c\u5217\u8868 InterestRate \u00b6 \u9019\u5f35\u8cc7\u6599\u8868\u4e3b\u8981\u662f\u5217\u51fa\u76ee\u524d\u5229\u7387\u8cc7\u6599\u4e2d\u64c1\u6709\u7684\u592e\u884c\u5217\u8868 import requests import pandas as pd url = \"http://api.finmindtrade.com/api/v2/datalist?dataset=InterestRate\" data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) 0 0 BCB 1 BOC 2 BOE 3 BOJ 4 CBR \u5229\u7387\u8cc7\u6599\u8868 InterestRate \u00b6 \u91dd\u5c0d FED \u505a\u793a\u7bc4 import requests import pandas as pd url = \"http://api.finmindtrade.com/api/v2/data?dataset=InterestRate&data_id=FED\" data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) country date full_country_name interest_rate 0 FED 1982 - 09 - 27 Federal Reserve 10.25 1 FED 1982 - 10 - 01 Federal Reserve 10.00 2 FED 1982 - 10 - 07 Federal Reserve 9.50 3 FED 1982 - 11 - 19 Federal Reserve 9.00 4 FED 1982 - 12 - 14 Federal Reserve 8.50","title":"InterestRate"},{"location":"tutor/InterestRate/#interestrate","text":"\u9019\u5f35\u8cc7\u6599\u8868\u4e3b\u8981\u662f\u5217\u51fa\u76ee\u524d\u5229\u7387\u8cc7\u6599\u4e2d\u64c1\u6709\u7684\u592e\u884c\u5217\u8868 import requests import pandas as pd url = \"http://api.finmindtrade.com/api/v2/datalist?dataset=InterestRate\" data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) 0 0 BCB 1 BOC 2 BOE 3 BOJ 4 CBR","title":"\u5229\u7387\u8cc7\u6599\u592e\u884c\u5217\u8868 InterestRate"},{"location":"tutor/InterestRate/#interestrate_1","text":"\u91dd\u5c0d FED \u505a\u793a\u7bc4 import requests import pandas as pd url = \"http://api.finmindtrade.com/api/v2/data?dataset=InterestRate&data_id=FED\" data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) country date full_country_name interest_rate 0 FED 1982 - 09 - 27 Federal Reserve 10.25 1 FED 1982 - 10 - 01 Federal Reserve 10.00 2 FED 1982 - 10 - 07 Federal Reserve 9.50 3 FED 1982 - 11 - 19 Federal Reserve 9.00 4 FED 1982 - 12 - 14 Federal Reserve 8.50","title":"\u5229\u7387\u8cc7\u6599\u8868 InterestRate"},{"location":"tutor/JapanStock/","text":"\u5728\u65e5\u672c\u80a1\u7968\u5e02\u5834\uff0c\u6211\u5011\u64c1\u6709 1 \u7a2e\u8cc7\u6599\u96c6\uff0c\u5982\u4e0b: \u65e5\u672c\u80a1\u50f9\u8cc7\u6599\u8868 JapanStockPrice \u53e6\u5916\u91dd\u5c0d\u8cc7\u6599\u96c6\u6574\u7406\u51fa\u7684\u5217\u8868\u5982\u4e0b: \u65e5\u672c\u80a1\u7968\u6e05\u55ae\u5217\u8868 JapanStockInfo \u6839\u64da\u4e0a\u8ff0\u8cc7\u6599\u8868\u9010\u4e00\u8aaa\u660e\u600e\u9ebc\u4f7f\u7528\uff0c\u53e6\u5916\u5177\u9ad4\u8cc7\u6599\u8868 schemas \u8acb\u53c3\u8003 finmindapi \u65e5\u672c\u80a1\u7968\u6e05\u55ae\u5217\u8868 JapanStockInfo \u00b6 \u9019\u5f35\u8cc7\u6599\u8868\u4e3b\u8981\u662f\u5217\u51fa\u65e5\u672c\u6240\u6709\u4e0a\u5e02\u4e0a\u6ac3\u7684\u80a1\u7968\u540d\u7a31\uff0c\u4ee3\u78bc\u548c\u7522\u696d\u985e\u5225 import requests import pandas as pd url = 'http://api.finmindtrade.com/api/v2/data?dataset=JapanStockInfo' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date ... stock_name 0 2019 - 01 - 14 ... Kyokuyo Co . Ltd . 1 2019 - 01 - 14 ... Nippon Suisan Kaisha Ltd . 2 2019 - 01 - 14 ... Maruha Nichiro Corp . 3 2019 - 01 - 14 ... Hohsui Corp . 4 2019 - 01 - 14 ... Kaneko Seeds Co . Ltd . \u65e5\u672c\u80a1\u50f9\u8cc7\u6599\u8868 JapanStockPrice \u00b6 import requests import pandas as pd url = 'http://api.finmindtrade.com/api/v2/data?dataset=JapanStockPrice&stock_id=7203.T&date=2019-01-01' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) Adj_Close Close High ... Volume date stock_id 0 6406.0 6406.0 6406.0 ... 0 2019 - 01 - 01 7203. T 1 6406.0 6406.0 6406.0 ... 0 2019 - 01 - 02 7203. T 2 6406.0 6406.0 6406.0 ... 0 2019 - 01 - 03 7203. T 3 6346.0 6346.0 6360.0 ... 10011900 2019 - 01 - 04 7203. T 4 6546.0 6546.0 6622.0 ... 7677200 2019 - 01 - 07 7203. T","title":"JapanStock"},{"location":"tutor/JapanStock/#japanstockinfo","text":"\u9019\u5f35\u8cc7\u6599\u8868\u4e3b\u8981\u662f\u5217\u51fa\u65e5\u672c\u6240\u6709\u4e0a\u5e02\u4e0a\u6ac3\u7684\u80a1\u7968\u540d\u7a31\uff0c\u4ee3\u78bc\u548c\u7522\u696d\u985e\u5225 import requests import pandas as pd url = 'http://api.finmindtrade.com/api/v2/data?dataset=JapanStockInfo' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date ... stock_name 0 2019 - 01 - 14 ... Kyokuyo Co . Ltd . 1 2019 - 01 - 14 ... Nippon Suisan Kaisha Ltd . 2 2019 - 01 - 14 ... Maruha Nichiro Corp . 3 2019 - 01 - 14 ... Hohsui Corp . 4 2019 - 01 - 14 ... Kaneko Seeds Co . Ltd .","title":"\u65e5\u672c\u80a1\u7968\u6e05\u55ae\u5217\u8868 JapanStockInfo"},{"location":"tutor/JapanStock/#japanstockprice","text":"import requests import pandas as pd url = 'http://api.finmindtrade.com/api/v2/data?dataset=JapanStockPrice&stock_id=7203.T&date=2019-01-01' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) Adj_Close Close High ... Volume date stock_id 0 6406.0 6406.0 6406.0 ... 0 2019 - 01 - 01 7203. T 1 6406.0 6406.0 6406.0 ... 0 2019 - 01 - 02 7203. T 2 6406.0 6406.0 6406.0 ... 0 2019 - 01 - 03 7203. T 3 6346.0 6346.0 6360.0 ... 10011900 2019 - 01 - 04 7203. T 4 6546.0 6546.0 6622.0 ... 7677200 2019 - 01 - 07 7203. T","title":"\u65e5\u672c\u80a1\u50f9\u8cc7\u6599\u8868 JapanStockPrice"},{"location":"tutor/Macroeconomy/","text":"\u5728\u7e3d\u9ad4\u7d93\u6fdf\u65b9\u9762\uff0c\u6211\u5011\u64c1\u6709 2 \u7a2e\u8cc7\u6599\u96c6\uff0c\u5982\u4e0b: \u5404\u570b\u8ca8\u5e63\u767c\u884c\u91cf\u8868 CurrencyCirculation \u653f\u5e9c\u516c\u50b5\u6b96\u5229\u7387\u8868 GovernmentBondsYield \u91dd\u5c0d\u4e0d\u540c\u8cc7\u6599\u96c6\u4e5f\u5c0d\u61c9\u6574\u7406\u51fa\u5546\u54c1\u4ee3\u78bc\u6e05\u55ae \u5404\u570b\u8ca8\u5e63\u767c\u884c\u91cf\u5217\u8868 CurrencyCirculation \u653f\u5e9c\u516c\u50b5\u6b96\u5229\u7387\u5217\u8868 GovernmentBondsYield \u5404\u570b\u8ca8\u5e63\u767c\u884c\u91cf\u5217\u8868 CurrencyCirculation \u00b6 import requests import pandas as pd url = 'http://finmindapi.servebeer.com/api/v2/datalist?dataset=CurrencyCirculation' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) 0 0 Europe 1 Taiwan 2 US \u5404\u570b\u8ca8\u5e63\u767c\u884c\u91cf\u8868 CurrencyCirculation \u00b6 import requests import pandas as pd url = 'http://finmindapi.servebeer.com/api/v2/data?dataset=CurrencyCirculation&date=2020-01-01&data_id=US' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) country date type value 0 US 2020 - 01 - 01 Monthly 1798.984 B 1 US 2020 - 02 - 01 Monthly 1795.990 B 2 US 2020 - 03 - 01 Monthly 1826.102 B 3 US 2020 - 04 - 01 Monthly 1876.878 B \u653f\u5e9c\u516c\u50b5\u6b96\u5229\u7387\u5217\u8868 GovernmentBondsYield \u00b6 import requests import pandas as pd url = 'http://finmindapi.servebeer.com/api/v2/datalist?dataset=GovernmentBondsYield' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) 0 0 United States 1 - Month 1 United States 1 - Year 2 United States 10 - Year 3 United States 2 - Month 4 United States 2 - Year \u653f\u5e9c\u516c\u50b5\u6b96\u5229\u7387\u8868 GovernmentBondsYield \u00b6 import requests import pandas as pd url = 'http://finmindapi.servebeer.com/api/v2/data?dataset=GovernmentBondsYield&date=2020-01-01&data_id=United%20States%203-Year' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date name value 0 2020 - 01 - 02 United States 3 - Year 1.59 1 2020 - 01 - 03 United States 3 - Year 1.54 2 2020 - 01 - 06 United States 3 - Year 1.56 3 2020 - 01 - 07 United States 3 - Year 1.55 4 2020 - 01 - 08 United States 3 - Year 1.61","title":"Macroeconomy"},{"location":"tutor/Macroeconomy/#currencycirculation","text":"import requests import pandas as pd url = 'http://finmindapi.servebeer.com/api/v2/datalist?dataset=CurrencyCirculation' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) 0 0 Europe 1 Taiwan 2 US","title":"\u5404\u570b\u8ca8\u5e63\u767c\u884c\u91cf\u5217\u8868 CurrencyCirculation"},{"location":"tutor/Macroeconomy/#currencycirculation_1","text":"import requests import pandas as pd url = 'http://finmindapi.servebeer.com/api/v2/data?dataset=CurrencyCirculation&date=2020-01-01&data_id=US' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) country date type value 0 US 2020 - 01 - 01 Monthly 1798.984 B 1 US 2020 - 02 - 01 Monthly 1795.990 B 2 US 2020 - 03 - 01 Monthly 1826.102 B 3 US 2020 - 04 - 01 Monthly 1876.878 B","title":"\u5404\u570b\u8ca8\u5e63\u767c\u884c\u91cf\u8868 CurrencyCirculation"},{"location":"tutor/Macroeconomy/#governmentbondsyield","text":"import requests import pandas as pd url = 'http://finmindapi.servebeer.com/api/v2/datalist?dataset=GovernmentBondsYield' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) 0 0 United States 1 - Month 1 United States 1 - Year 2 United States 10 - Year 3 United States 2 - Month 4 United States 2 - Year","title":"\u653f\u5e9c\u516c\u50b5\u6b96\u5229\u7387\u5217\u8868 GovernmentBondsYield"},{"location":"tutor/Macroeconomy/#governmentbondsyield_1","text":"import requests import pandas as pd url = 'http://finmindapi.servebeer.com/api/v2/data?dataset=GovernmentBondsYield&date=2020-01-01&data_id=United%20States%203-Year' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date name value 0 2020 - 01 - 02 United States 3 - Year 1.59 1 2020 - 01 - 03 United States 3 - Year 1.54 2 2020 - 01 - 06 United States 3 - Year 1.56 3 2020 - 01 - 07 United States 3 - Year 1.55 4 2020 - 01 - 08 United States 3 - Year 1.61","title":"\u653f\u5e9c\u516c\u50b5\u6b96\u5229\u7387\u8868 GovernmentBondsYield"},{"location":"tutor/Materials/","text":"\u5728\u539f\u7269\u6599\u5e02\u5834\uff0c\u6211\u5011\u64c1\u6709 2 \u7a2e\u8cc7\u6599\u96c6\uff0c\u5982\u4e0b: \u9ec3\u91d1\u50f9\u683c\u8868 GoldPrice \u539f\u6cb9\u8cc7\u6599\u8868 CrudeOilPrices \u91dd\u5c0d\u4e0d\u540c\u8cc7\u6599\u96c6\u4e5f\u5c0d\u61c9\u6574\u7406\u51fa\u5546\u54c1\u4ee3\u78bc\u6e05\u55ae \u539f\u6cb9\u8cc7\u6599\u5217\u8868 CrudeOilPrices \u9ec3\u91d1\u50f9\u683c\u8868 GoldPrice \u00b6 import requests import pandas as pd url = 'http://finmindapi.servebeer.com/api/v2/data?dataset=GoldPrice&date=2020-01-01' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) Price date 0 1517.2 2020 - 01 - 01 00 : 00 : 01 1 1517.2 2020 - 01 - 01 00 : 03 : 01 2 1517.2 2020 - 01 - 01 00 : 08 : 02 3 1517.2 2020 - 01 - 01 00 : 13 : 02 4 1517.2 2020 - 01 - 01 00 : 18 : 01 \u539f\u6cb9\u8cc7\u6599\u8868 CrudeOilPrices \u00b6 import requests import pandas as pd url = 'http://finmindapi.servebeer.com/api/v2/data?dataset=CrudeOilPrices&date=2020-01-01&data_id=WTI' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date name price 0 2020 - 01 - 02 WTI 61.17 1 2020 - 01 - 03 WTI 63 2 2020 - 01 - 06 WTI 63.27 3 2020 - 01 - 07 WTI 62.7 4 2020 - 01 - 08 WTI 59.65 \u539f\u6cb9\u8cc7\u6599\u5217\u8868 CrudeOilPrices \u00b6 import requests import pandas as pd url = 'http://finmindapi.servebeer.com/api/v2/datalist?dataset=CrudeOilPrices' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) 0 0 Brent 1 WTI","title":"Materials"},{"location":"tutor/Materials/#goldprice","text":"import requests import pandas as pd url = 'http://finmindapi.servebeer.com/api/v2/data?dataset=GoldPrice&date=2020-01-01' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) Price date 0 1517.2 2020 - 01 - 01 00 : 00 : 01 1 1517.2 2020 - 01 - 01 00 : 03 : 01 2 1517.2 2020 - 01 - 01 00 : 08 : 02 3 1517.2 2020 - 01 - 01 00 : 13 : 02 4 1517.2 2020 - 01 - 01 00 : 18 : 01","title":"\u9ec3\u91d1\u50f9\u683c\u8868 GoldPrice"},{"location":"tutor/Materials/#crudeoilprices","text":"import requests import pandas as pd url = 'http://finmindapi.servebeer.com/api/v2/data?dataset=CrudeOilPrices&date=2020-01-01&data_id=WTI' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date name price 0 2020 - 01 - 02 WTI 61.17 1 2020 - 01 - 03 WTI 63 2 2020 - 01 - 06 WTI 63.27 3 2020 - 01 - 07 WTI 62.7 4 2020 - 01 - 08 WTI 59.65","title":"\u539f\u6cb9\u8cc7\u6599\u8868 CrudeOilPrices"},{"location":"tutor/Materials/#crudeoilprices_1","text":"import requests import pandas as pd url = 'http://finmindapi.servebeer.com/api/v2/datalist?dataset=CrudeOilPrices' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) 0 0 Brent 1 WTI","title":"\u539f\u6cb9\u8cc7\u6599\u5217\u8868 CrudeOilPrices"},{"location":"tutor/TaiwanStock/","text":"\u5728\u53f0\u7063\u80a1\u7968\u5e02\u5834\uff0c\u6211\u5011\u64c1\u6709 16 \u7a2e\u8cc7\u6599\u96c6\uff0c\u5982\u4e0b: \u53f0\u7063\u80a1\u50f9\u8cc7\u6599\u8868 TaiwanStockPrice \u8cc7\u7522\u640d\u76ca\u8868 FinancialStatements \u8cc7\u7522\u8ca0\u50b5\u8868 BalanceSheet \u80a1\u5229\u653f\u7b56\u8868 StockDividend \u9664\u6b0a\u9664\u606f\u7d50\u679c\u8868 StockDividendResult \u878d\u8cc7\u878d\u52b5\u8868 TaiwanStockMarginPurchaseShortSale \u53f0\u7063\u5e02\u5834\u6574\u9ad4\u878d\u8cc7\u878d\u52b5\u8868 TotalMarginPurchaseShortSale \u6cd5\u4eba\u8cb7\u8ce3\u8868 InstitutionalInvestorsBuySell \u80a1\u6771\u7d50\u69cb\u8868 Shareholding \u80a1\u6771\u6301\u80a1\u5206\u7d1a\u8868 TaiwanStockHoldingSharesPer \u73fe\u91d1\u6d41\u91cf\u8868 TaiwanCashFlowsStatement \u53f0\u7063\u80a1\u50f9\u53ca\u6642\u8cc7\u6599\u8868 TaiwanStockPriceMinute \u53f0\u7063\u80a1\u50f9\u53ca\u6642\u6700\u4f73\u4e94\u6a94\u8cb7\u8ce3\u50f9\u91cf\u8cc7\u6599\u8868 TaiwanStockPriceMinuteBidAsk \u53f0\u7063\u671f\u8ca8\u4ea4\u6613\u8868 TaiwanFutures \u53f0\u7063\u9078\u64c7\u6b0a\u4ea4\u6613\u8868 TaiwanOption \u76f8\u95dc\u65b0\u805e\u8868 TaiwanStockNews \u53e6\u5916\u91dd\u5c0d\u8cc7\u6599\u96c6\u6574\u7406\u51fa\u7684\u5217\u8868\u5982\u4e0b: \u53f0\u7063\u80a1\u7968\u6e05\u55ae\u5217\u8868 TaiwanStockInfo \u6839\u64da\u4e0a\u8ff0\u8cc7\u6599\u8868\u9010\u4e00\u8aaa\u660e\u600e\u9ebc\u4f7f\u7528\uff0c\u53e6\u5916\u5177\u9ad4\u8cc7\u6599\u8868 schemas \u8acb\u53c3\u8003 finmindapi \u53f0\u7063\u80a1\u7968\u6e05\u55ae\u5217\u8868 TaiwanStockInfo \u00b6 \u9019\u5f35\u8cc7\u6599\u8868\u4e3b\u8981\u662f\u5217\u51fa\u53f0\u7063\u6240\u6709\u4e0a\u5e02\u4e0a\u6ac3\u7684\u80a1\u7968\u540d\u7a31\uff0c\u4ee3\u78bc\u548c\u7522\u696d\u985e\u5225 import requests import pandas as pd url = \"http://api.finmindtrade.com/api/v2/data?dataset=TaiwanStockInfo\" data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) industry_category stock_id stock_name type 0 ETF 0050 \u5143\u5927\u53f0\u706350 1 1 ETF 0051 \u5143\u5927\u4e2d\u578b100 1 2 ETF 0052 \u5bcc\u90a6\u79d1\u6280 1 3 ETF 0053 \u5143\u5927\u96fb\u5b50 1 4 ETF 0054 \u5143\u5927\u53f0\u554650 1 \u53f0\u7063\u80a1\u50f9\u8cc7\u6599\u8868 TaiwanStockPrice \u00b6 import requests import pandas as pd url = 'http://api.finmindtrade.com/api/v2/data?dataset=TaiwanStockPrice&stock_id=2330&date=2019-01-01' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date stock_id ... spread Trading_turnover 0 2019 - 01 - 02 2330 ... - 6.0 12329 1 2019 - 01 - 03 2330 ... - 4.0 14549 2 2019 - 01 - 04 2330 ... - 7.5 28786 3 2019 - 01 - 07 2330 ... 5.0 11224 4 2019 - 01 - 08 2330 ... - 2.0 9377 \u8cc7\u7522\u640d\u76ca\u8868 FinancialStatements \u00b6 import requests import pandas as pd url = 'http://api.finmindtrade.com/api/v2/data?dataset=FinancialStatements&stock_id=2330&date=2019-01-01' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date stock_id type value 0 2019 - 03 - 31 2330 ASSO 4.334910e+08 1 2019 - 03 - 31 2330 CostOfGoodsSold 1.283520e+11 2 2019 - 03 - 31 2330 EPS 2.370000e+00 3 2019 - 03 - 31 2330 EXDF 3.218080e+09 4 2019 - 03 - 31 2330 FinancialCost 8.990650e+08 \u8cc7\u7522\u8ca0\u50b5\u8868 BalanceSheet \u00b6 import requests import pandas as pd url = 'http://api.finmindtrade.com/api/v2/data?dataset=BalanceSheet&stock_id=2330&date=2019-01-01' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date ... value 0 2019 - 03 - 31 ... 27100909000 1 2019 - 03 - 31 ... 1 2 2019 - 03 - 31 ... 560941000 3 2019 - 03 - 31 ... 0 4 2019 - 03 - 31 ... 309821000 \u80a1\u5229\u653f\u7b56\u8868 StockDividend \u00b6 import requests import pandas as pd url = 'http://api.finmindtrade.com/api/v2/data?dataset=StockDividend&stock_id=2330&date=2019-01-01' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date stock_id type value 0 2019 - 06 - 30 2330 AnnouncementDate 2019 - 06 - 06 1 2019 - 06 - 30 2330 AnnouncementTime 15 : 47 : 30 2 2019 - 06 - 30 2330 CacheDividendDealDate 2019 - 07 - 18 3 2019 - 06 - 30 2330 CacheDividendReleaseDate 2019 - 06 - 24 4 2019 - 06 - 30 2330 CashIncreaseSubscriptionpRrice \u9664\u6b0a\u9664\u606f\u7d50\u679c\u8868 StockDividendResult \u00b6 import requests import pandas as pd url = 'http://finmindapi.servebeer.com/api/v2/data?dataset=StockDividendResult&stock_id=2330&date=2020-01-01' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date stock_id type value 0 2020 - 03 - 19 2330 after_price 257.50 1 2020 - 03 - 19 2330 before_price 260.00 2 2020 - 03 - 19 2330 max_price 283.00 3 2020 - 03 - 19 2330 min_price 232.00 4 2020 - 03 - 19 2330 open_price 257.50 \u878d\u8cc7\u878d\u52b5\u8868 TaiwanStockMarginPurchaseShortSale \u00b6 import requests import pandas as pd url = 'http://api.finmindtrade.com/api/v2/data?dataset=TaiwanStockMarginPurchaseShortSale&stock_id=2330&date=2019-01-01' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date ... ShortSaleYesterdayBalance 0 2019 - 01 - 02 ... 3179 1 2019 - 01 - 03 ... 2782 2 2019 - 01 - 04 ... 2475 3 2019 - 01 - 07 ... 2164 4 2019 - 01 - 08 ... 2154 \u53f0\u7063\u5e02\u5834\u6574\u9ad4\u878d\u8cc7\u878d\u52b5\u8868 TotalMarginPurchaseShortSale \u00b6 import requests import pandas as pd url = 'http://finmindapi.servebeer.com/api/v2/data?dataset=TotalMarginPurchaseShortSale&date=2020-04-01' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) TodayBalance YesBalance buy date name sell 0 5463820 5471770 236127 2020 - 04 - 01 MarginPurchase 233091 1 5496478 5463820 327741 2020 - 04 - 06 MarginPurchase 291292 2 5506839 5496478 389543 2020 - 04 - 07 MarginPurchase 370022 3 5533088 5506838 381063 2020 - 04 - 08 MarginPurchase 349361 4 5561841 5533088 349129 2020 - 04 - 09 MarginPurchase 313083 \u6cd5\u4eba\u8cb7\u8ce3\u8868 InstitutionalInvestorsBuySell \u00b6 import requests import pandas as pd url = 'http://api.finmindtrade.com/api/v2/data?dataset=InstitutionalInvestorsBuySell&stock_id=2330&date=2019-01-01' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date stock_id buy name sell 0 2019 - 01 - 02 2330 183000 Dealer_Hedging 344000 1 2019 - 01 - 02 2330 742000 Dealer_self 1375000 2 2019 - 01 - 02 2330 0 Foreign_Dealer_Self 0 3 2019 - 01 - 02 2330 13633825 Foreign_Investor 22365017 4 2019 - 01 - 02 2330 175000 Investment_Trust 166000 \u80a1\u6771\u7d50\u69cb\u8868 Shareholding \u00b6 import requests import pandas as pd url = 'http://api.finmindtrade.com/api/v2/data?dataset=Shareholding&stock_id=2330&date=2019-01-01' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date stock_id buy name sell 0 2019 - 01 - 02 2330 183000 Dealer_Hedging 344000 1 2019 - 01 - 02 2330 742000 Dealer_self 1375000 2 2019 - 01 - 02 2330 0 Foreign_Dealer_Self 0 3 2019 - 01 - 02 2330 13633825 Foreign_Investor 22365017 4 2019 - 01 - 02 2330 175000 Investment_Trust 166000 \u80a1\u6771\u6301\u80a1\u5206\u7d1a\u8868 TaiwanStockHoldingSharesPer \u00b6 import requests import pandas as pd url = 'http://finmindapi.servebeer.com/api/v2/data?dataset=TaiwanStockHoldingSharesPer&stock_id=2330&date=2020-01-01' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date stock_id HoldingSharesLevel people percent unit 0 2020 - 01 - 03 2330 1 - 999 152189 0.12 31620477 1 2020 - 01 - 03 2330 1 , 000 - 5 , 000 162537 1.23 319338776 2 2020 - 01 - 03 2330 10 , 001 - 15 , 000 9197 0.43 112485162 3 2020 - 01 - 03 2330 100 , 001 - 200 , 000 1597 0.85 221839181 4 2020 - 01 - 03 2330 15 , 001 - 20 , 000 4388 0.29 77359293 \u73fe\u91d1\u6d41\u91cf\u8868 TaiwanCashFlowsStatement \u00b6 import requests import pandas as pd url = 'http://api.finmindtrade.com/api/v2/data?dataset=TaiwanCashFlowsStatement&stock_id=2330&date=2019-01-01' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date ... value 0 2019 - 03 - 31 ... 1355336000 1 2019 - 03 - 31 ... 577814601000 2 2019 - 03 - 31 ... 645670527000 3 2019 - 03 - 31 ... 67855926000 4 2019 - 03 - 31 ... 152670278000 \u53f0\u7063\u80a1\u50f9\u53ca\u6642\u8cc7\u6599\u8868 TaiwanStockPriceMinute \u00b6 \u53ea\u8f38\u5165 dataset \u53c3\u6578\u6703\u56de\u50b3\u7576\u5929\u5373\u6642\u4ea4\u6613\u8cc7\u6599 \u8f38\u5165 dataset \u548c date \u6703\u56de\u50b3date\u4e4b\u5f8c\u4e00\u76f4\u5230\u6700\u8fd1\u4e00\u500b\u4ea4\u6613\u65e5\u7684\u6240\u6709\u4ea4\u6613\u8cc7\u6599 import requests import pandas as pd url = 'http://api.finmindtrade.com/api/v2/data?dataset=TaiwanStockPriceMinute&stock_id=2330&date=2019-01-01' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date stock_id deal_price volume 0 2019 - 05 - 28 13 : 21 : 03.000000 2330 231.0 16 1 2019 - 05 - 28 13 : 21 : 08.000000 2330 231.0 72 2 2019 - 05 - 28 13 : 21 : 13.000000 2330 231.0 64 3 2019 - 05 - 28 13 : 21 : 18.000000 2330 231.0 1 4 2019 - 05 - 28 13 : 21 : 23.000000 2330 231.5 1 \u53f0\u7063\u80a1\u50f9\u53ca\u6642\u6700\u4f73\u4e94\u6a94\u8cb7\u8ce3\u50f9\u91cf\u8cc7\u6599\u8868 TaiwanStockPriceMinuteBidAsk \u00b6 \u958b\u767c\u4e2d \u53f0\u7063\u671f\u8ca8\u4ea4\u6613\u8868 TaiwanFutures \u00b6 \u958b\u767c\u4e2d \u53f0\u7063\u9078\u64c7\u6b0a\u4ea4\u6613\u8868 TaiwanOption \u00b6 \u958b\u767c\u4e2d \u76f8\u95dc\u65b0\u805e\u8868 TaiwanStockNews \u00b6 import requests import pandas as pd url = 'http://api.finmindtrade.com/api/v2/data?dataset=TaiwanStockNews&stock_id=2330&date=2019-01-01' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date ... title 0 2019 - 07 - 02 07 : 00 : 00 ... \u5f35\u5fe0\u8b00\u7684 \u300c \u544a\u5225\u4f5c \u300d \u843d\u8173\u5357\u79d1\u53f0\u7a4d\u96fb\u7684\u7955\u5bc6\u6b66\u5668 ... \uff5c \u5929\u4e0b\u96dc\u8a8c - \u5929\u4e0b\u96dc\u8a8c 1 2019 - 07 - 20 07 : 00 : 00 ... \u53f0\u7a4d\u96fb\u544a\u5225\u4f55\u9e97\u6885\u6642\u4ee3 \uff01 \u65b0\u4efb\u8ca1\u52d9\u9577\u9ec3\u4ec1\u662d\u63ed\u5bc6 - \u79d1\u6280\u65b0\u5831 TechNews 2 2019 - 09 - 22 07 : 00 : 00 ... \u53f0\u7a4d\u96fb\u7522\u80fd\u6eff\u8f09\u6240\u81f4 \uff1f AMD\u5ba3\u5e033950X\u5ef6\u81f311\u6708\u63a8\u51fa - \u9245\u4ea8\u7db2 3 2019 - 09 - 24 07 : 00 : 00 ... 5 \u5948\u7c73\u9032\u5ea6\u8d85\u524d \uff0c \u53f0\u7a4d\u96fb\u9023\u7e8c\u4e0a\u4fee\u7522\u80fd\u898f\u756b - \u79d1\u6280\u65b0\u5831 TechNews 4 2019 - 09 - 24 07 : 00 : 00 ... \u529b\u65fa\u8a18\u61b6\u9ad4IP\u50b3\u6377\u5831\u902310\u5e74\u7372\u9078\u53f0\u7a4d\u96fb\u6700\u4f73\u5925\u4f34 | Anue\u9245\u4ea8 - \u53f0\u80a1\u65b0\u805e - \u9245\u4ea8\u7db2\u8ca1\u7d93\u65b0\u805e","title":"TaiwanStock"},{"location":"tutor/TaiwanStock/#taiwanstockinfo","text":"\u9019\u5f35\u8cc7\u6599\u8868\u4e3b\u8981\u662f\u5217\u51fa\u53f0\u7063\u6240\u6709\u4e0a\u5e02\u4e0a\u6ac3\u7684\u80a1\u7968\u540d\u7a31\uff0c\u4ee3\u78bc\u548c\u7522\u696d\u985e\u5225 import requests import pandas as pd url = \"http://api.finmindtrade.com/api/v2/data?dataset=TaiwanStockInfo\" data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) industry_category stock_id stock_name type 0 ETF 0050 \u5143\u5927\u53f0\u706350 1 1 ETF 0051 \u5143\u5927\u4e2d\u578b100 1 2 ETF 0052 \u5bcc\u90a6\u79d1\u6280 1 3 ETF 0053 \u5143\u5927\u96fb\u5b50 1 4 ETF 0054 \u5143\u5927\u53f0\u554650 1","title":"\u53f0\u7063\u80a1\u7968\u6e05\u55ae\u5217\u8868 TaiwanStockInfo"},{"location":"tutor/TaiwanStock/#taiwanstockprice","text":"import requests import pandas as pd url = 'http://api.finmindtrade.com/api/v2/data?dataset=TaiwanStockPrice&stock_id=2330&date=2019-01-01' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date stock_id ... spread Trading_turnover 0 2019 - 01 - 02 2330 ... - 6.0 12329 1 2019 - 01 - 03 2330 ... - 4.0 14549 2 2019 - 01 - 04 2330 ... - 7.5 28786 3 2019 - 01 - 07 2330 ... 5.0 11224 4 2019 - 01 - 08 2330 ... - 2.0 9377","title":"\u53f0\u7063\u80a1\u50f9\u8cc7\u6599\u8868 TaiwanStockPrice"},{"location":"tutor/TaiwanStock/#financialstatements","text":"import requests import pandas as pd url = 'http://api.finmindtrade.com/api/v2/data?dataset=FinancialStatements&stock_id=2330&date=2019-01-01' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date stock_id type value 0 2019 - 03 - 31 2330 ASSO 4.334910e+08 1 2019 - 03 - 31 2330 CostOfGoodsSold 1.283520e+11 2 2019 - 03 - 31 2330 EPS 2.370000e+00 3 2019 - 03 - 31 2330 EXDF 3.218080e+09 4 2019 - 03 - 31 2330 FinancialCost 8.990650e+08","title":"\u8cc7\u7522\u640d\u76ca\u8868 FinancialStatements"},{"location":"tutor/TaiwanStock/#balancesheet","text":"import requests import pandas as pd url = 'http://api.finmindtrade.com/api/v2/data?dataset=BalanceSheet&stock_id=2330&date=2019-01-01' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date ... value 0 2019 - 03 - 31 ... 27100909000 1 2019 - 03 - 31 ... 1 2 2019 - 03 - 31 ... 560941000 3 2019 - 03 - 31 ... 0 4 2019 - 03 - 31 ... 309821000","title":"\u8cc7\u7522\u8ca0\u50b5\u8868 BalanceSheet"},{"location":"tutor/TaiwanStock/#stockdividend","text":"import requests import pandas as pd url = 'http://api.finmindtrade.com/api/v2/data?dataset=StockDividend&stock_id=2330&date=2019-01-01' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date stock_id type value 0 2019 - 06 - 30 2330 AnnouncementDate 2019 - 06 - 06 1 2019 - 06 - 30 2330 AnnouncementTime 15 : 47 : 30 2 2019 - 06 - 30 2330 CacheDividendDealDate 2019 - 07 - 18 3 2019 - 06 - 30 2330 CacheDividendReleaseDate 2019 - 06 - 24 4 2019 - 06 - 30 2330 CashIncreaseSubscriptionpRrice","title":"\u80a1\u5229\u653f\u7b56\u8868 StockDividend"},{"location":"tutor/TaiwanStock/#stockdividendresult","text":"import requests import pandas as pd url = 'http://finmindapi.servebeer.com/api/v2/data?dataset=StockDividendResult&stock_id=2330&date=2020-01-01' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date stock_id type value 0 2020 - 03 - 19 2330 after_price 257.50 1 2020 - 03 - 19 2330 before_price 260.00 2 2020 - 03 - 19 2330 max_price 283.00 3 2020 - 03 - 19 2330 min_price 232.00 4 2020 - 03 - 19 2330 open_price 257.50","title":"\u9664\u6b0a\u9664\u606f\u7d50\u679c\u8868 StockDividendResult"},{"location":"tutor/TaiwanStock/#taiwanstockmarginpurchaseshortsale","text":"import requests import pandas as pd url = 'http://api.finmindtrade.com/api/v2/data?dataset=TaiwanStockMarginPurchaseShortSale&stock_id=2330&date=2019-01-01' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date ... ShortSaleYesterdayBalance 0 2019 - 01 - 02 ... 3179 1 2019 - 01 - 03 ... 2782 2 2019 - 01 - 04 ... 2475 3 2019 - 01 - 07 ... 2164 4 2019 - 01 - 08 ... 2154","title":"\u878d\u8cc7\u878d\u52b5\u8868 TaiwanStockMarginPurchaseShortSale"},{"location":"tutor/TaiwanStock/#totalmarginpurchaseshortsale","text":"import requests import pandas as pd url = 'http://finmindapi.servebeer.com/api/v2/data?dataset=TotalMarginPurchaseShortSale&date=2020-04-01' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) TodayBalance YesBalance buy date name sell 0 5463820 5471770 236127 2020 - 04 - 01 MarginPurchase 233091 1 5496478 5463820 327741 2020 - 04 - 06 MarginPurchase 291292 2 5506839 5496478 389543 2020 - 04 - 07 MarginPurchase 370022 3 5533088 5506838 381063 2020 - 04 - 08 MarginPurchase 349361 4 5561841 5533088 349129 2020 - 04 - 09 MarginPurchase 313083","title":"\u53f0\u7063\u5e02\u5834\u6574\u9ad4\u878d\u8cc7\u878d\u52b5\u8868 TotalMarginPurchaseShortSale"},{"location":"tutor/TaiwanStock/#institutionalinvestorsbuysell","text":"import requests import pandas as pd url = 'http://api.finmindtrade.com/api/v2/data?dataset=InstitutionalInvestorsBuySell&stock_id=2330&date=2019-01-01' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date stock_id buy name sell 0 2019 - 01 - 02 2330 183000 Dealer_Hedging 344000 1 2019 - 01 - 02 2330 742000 Dealer_self 1375000 2 2019 - 01 - 02 2330 0 Foreign_Dealer_Self 0 3 2019 - 01 - 02 2330 13633825 Foreign_Investor 22365017 4 2019 - 01 - 02 2330 175000 Investment_Trust 166000","title":"\u6cd5\u4eba\u8cb7\u8ce3\u8868 InstitutionalInvestorsBuySell"},{"location":"tutor/TaiwanStock/#shareholding","text":"import requests import pandas as pd url = 'http://api.finmindtrade.com/api/v2/data?dataset=Shareholding&stock_id=2330&date=2019-01-01' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date stock_id buy name sell 0 2019 - 01 - 02 2330 183000 Dealer_Hedging 344000 1 2019 - 01 - 02 2330 742000 Dealer_self 1375000 2 2019 - 01 - 02 2330 0 Foreign_Dealer_Self 0 3 2019 - 01 - 02 2330 13633825 Foreign_Investor 22365017 4 2019 - 01 - 02 2330 175000 Investment_Trust 166000","title":"\u80a1\u6771\u7d50\u69cb\u8868 Shareholding"},{"location":"tutor/TaiwanStock/#taiwanstockholdingsharesper","text":"import requests import pandas as pd url = 'http://finmindapi.servebeer.com/api/v2/data?dataset=TaiwanStockHoldingSharesPer&stock_id=2330&date=2020-01-01' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date stock_id HoldingSharesLevel people percent unit 0 2020 - 01 - 03 2330 1 - 999 152189 0.12 31620477 1 2020 - 01 - 03 2330 1 , 000 - 5 , 000 162537 1.23 319338776 2 2020 - 01 - 03 2330 10 , 001 - 15 , 000 9197 0.43 112485162 3 2020 - 01 - 03 2330 100 , 001 - 200 , 000 1597 0.85 221839181 4 2020 - 01 - 03 2330 15 , 001 - 20 , 000 4388 0.29 77359293","title":"\u80a1\u6771\u6301\u80a1\u5206\u7d1a\u8868 TaiwanStockHoldingSharesPer"},{"location":"tutor/TaiwanStock/#taiwancashflowsstatement","text":"import requests import pandas as pd url = 'http://api.finmindtrade.com/api/v2/data?dataset=TaiwanCashFlowsStatement&stock_id=2330&date=2019-01-01' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date ... value 0 2019 - 03 - 31 ... 1355336000 1 2019 - 03 - 31 ... 577814601000 2 2019 - 03 - 31 ... 645670527000 3 2019 - 03 - 31 ... 67855926000 4 2019 - 03 - 31 ... 152670278000","title":"\u73fe\u91d1\u6d41\u91cf\u8868 TaiwanCashFlowsStatement"},{"location":"tutor/TaiwanStock/#taiwanstockpriceminute","text":"\u53ea\u8f38\u5165 dataset \u53c3\u6578\u6703\u56de\u50b3\u7576\u5929\u5373\u6642\u4ea4\u6613\u8cc7\u6599 \u8f38\u5165 dataset \u548c date \u6703\u56de\u50b3date\u4e4b\u5f8c\u4e00\u76f4\u5230\u6700\u8fd1\u4e00\u500b\u4ea4\u6613\u65e5\u7684\u6240\u6709\u4ea4\u6613\u8cc7\u6599 import requests import pandas as pd url = 'http://api.finmindtrade.com/api/v2/data?dataset=TaiwanStockPriceMinute&stock_id=2330&date=2019-01-01' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date stock_id deal_price volume 0 2019 - 05 - 28 13 : 21 : 03.000000 2330 231.0 16 1 2019 - 05 - 28 13 : 21 : 08.000000 2330 231.0 72 2 2019 - 05 - 28 13 : 21 : 13.000000 2330 231.0 64 3 2019 - 05 - 28 13 : 21 : 18.000000 2330 231.0 1 4 2019 - 05 - 28 13 : 21 : 23.000000 2330 231.5 1","title":"\u53f0\u7063\u80a1\u50f9\u53ca\u6642\u8cc7\u6599\u8868 TaiwanStockPriceMinute"},{"location":"tutor/TaiwanStock/#taiwanstockpriceminutebidask","text":"\u958b\u767c\u4e2d","title":"\u53f0\u7063\u80a1\u50f9\u53ca\u6642\u6700\u4f73\u4e94\u6a94\u8cb7\u8ce3\u50f9\u91cf\u8cc7\u6599\u8868 TaiwanStockPriceMinuteBidAsk"},{"location":"tutor/TaiwanStock/#taiwanfutures","text":"\u958b\u767c\u4e2d","title":"\u53f0\u7063\u671f\u8ca8\u4ea4\u6613\u8868 TaiwanFutures"},{"location":"tutor/TaiwanStock/#taiwanoption","text":"\u958b\u767c\u4e2d","title":"\u53f0\u7063\u9078\u64c7\u6b0a\u4ea4\u6613\u8868 TaiwanOption"},{"location":"tutor/TaiwanStock/#taiwanstocknews","text":"import requests import pandas as pd url = 'http://api.finmindtrade.com/api/v2/data?dataset=TaiwanStockNews&stock_id=2330&date=2019-01-01' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date ... title 0 2019 - 07 - 02 07 : 00 : 00 ... \u5f35\u5fe0\u8b00\u7684 \u300c \u544a\u5225\u4f5c \u300d \u843d\u8173\u5357\u79d1\u53f0\u7a4d\u96fb\u7684\u7955\u5bc6\u6b66\u5668 ... \uff5c \u5929\u4e0b\u96dc\u8a8c - \u5929\u4e0b\u96dc\u8a8c 1 2019 - 07 - 20 07 : 00 : 00 ... \u53f0\u7a4d\u96fb\u544a\u5225\u4f55\u9e97\u6885\u6642\u4ee3 \uff01 \u65b0\u4efb\u8ca1\u52d9\u9577\u9ec3\u4ec1\u662d\u63ed\u5bc6 - \u79d1\u6280\u65b0\u5831 TechNews 2 2019 - 09 - 22 07 : 00 : 00 ... \u53f0\u7a4d\u96fb\u7522\u80fd\u6eff\u8f09\u6240\u81f4 \uff1f AMD\u5ba3\u5e033950X\u5ef6\u81f311\u6708\u63a8\u51fa - \u9245\u4ea8\u7db2 3 2019 - 09 - 24 07 : 00 : 00 ... 5 \u5948\u7c73\u9032\u5ea6\u8d85\u524d \uff0c \u53f0\u7a4d\u96fb\u9023\u7e8c\u4e0a\u4fee\u7522\u80fd\u898f\u756b - \u79d1\u6280\u65b0\u5831 TechNews 4 2019 - 09 - 24 07 : 00 : 00 ... \u529b\u65fa\u8a18\u61b6\u9ad4IP\u50b3\u6377\u5831\u902310\u5e74\u7372\u9078\u53f0\u7a4d\u96fb\u6700\u4f73\u5925\u4f34 | Anue\u9245\u4ea8 - \u53f0\u80a1\u65b0\u805e - \u9245\u4ea8\u7db2\u8ca1\u7d93\u65b0\u805e","title":"\u76f8\u95dc\u65b0\u805e\u8868 TaiwanStockNews"},{"location":"tutor/UnitedKingdomStock/","text":"\u5728\u82f1\u570b\u80a1\u7968\u5e02\u5834\uff0c\u6211\u5011\u64c1\u6709 1 \u7a2e\u8cc7\u6599\u96c6\uff0c\u5982\u4e0b: \u82f1\u570b\u80a1\u50f9\u8cc7\u6599\u8868 UKStockPrice \u53e6\u5916\u91dd\u5c0d\u8cc7\u6599\u96c6\u6574\u7406\u51fa\u7684\u5217\u8868\u5982\u4e0b: \u82f1\u570b\u80a1\u7968\u6e05\u55ae\u5217\u8868 UKStockInfo \u6839\u64da\u4e0a\u8ff0\u8cc7\u6599\u8868\u9010\u4e00\u8aaa\u660e\u600e\u9ebc\u4f7f\u7528\uff0c\u53e6\u5916\u5177\u9ad4\u8cc7\u6599\u8868 schemas \u8acb\u53c3\u8003 finmindapi \u82f1\u570b\u80a1\u7968\u6e05\u55ae\u5217\u8868 UKStockInfo \u00b6 \u9019\u5f35\u8cc7\u6599\u8868\u4e3b\u8981\u662f\u5217\u51fa\u82f1\u570b\u6240\u6709\u4e0a\u5e02\u4e0a\u6ac3\u7684\u80a1\u7968\u540d\u7a31\uff0c\u4ee3\u78bc\u548c\u7522\u696d\u985e\u5225 import requests import pandas as pd url = 'http://api.finmindtrade.com/api/v2/data?dataset=UKStockInfo' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date stock_id Country stock_name 0 2019 - 01 - 31 17 MA . L AMD EURO . BK . 22 1 2019 - 01 - 31 44 CI . L AMD EURO . BK . 21 2 2019 - 01 - 31 47 HF . L AMD EURO . BK . 21 3 2019 - 01 - 31 58 MF . L AMD EURO . BK . 21 4 2019 - 01 - 31 59 FK . L AMD EURO . BK . 20 \u82f1\u570b\u80a1\u50f9\u8cc7\u6599\u8868 UKStockPrice \u00b6 import requests import pandas as pd url = 'http://api.finmindtrade.com/api/v2/data?dataset=UKStockPrice&stock_id=BP.L&date=2019-01-01' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) Adj_Close Close High ... Volume date stock_id 0 497.866 507.3 509.6 ... 33397201 2019 - 01 - 02 BP . L 1 499.240 508.7 514.4 ... 38347439 2019 - 01 - 03 BP . L 2 511.115 520.8 524.5 ... 34897489 2019 - 01 - 04 BP . L 3 511.115 520.8 524.4 ... 32659884 2019 - 01 - 07 BP . L 4 510.134 519.8 528.2 ... 28449464 2019 - 01 - 08 BP . L","title":"UnitedKingdomStock"},{"location":"tutor/UnitedKingdomStock/#ukstockinfo","text":"\u9019\u5f35\u8cc7\u6599\u8868\u4e3b\u8981\u662f\u5217\u51fa\u82f1\u570b\u6240\u6709\u4e0a\u5e02\u4e0a\u6ac3\u7684\u80a1\u7968\u540d\u7a31\uff0c\u4ee3\u78bc\u548c\u7522\u696d\u985e\u5225 import requests import pandas as pd url = 'http://api.finmindtrade.com/api/v2/data?dataset=UKStockInfo' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date stock_id Country stock_name 0 2019 - 01 - 31 17 MA . L AMD EURO . BK . 22 1 2019 - 01 - 31 44 CI . L AMD EURO . BK . 21 2 2019 - 01 - 31 47 HF . L AMD EURO . BK . 21 3 2019 - 01 - 31 58 MF . L AMD EURO . BK . 21 4 2019 - 01 - 31 59 FK . L AMD EURO . BK . 20","title":"\u82f1\u570b\u80a1\u7968\u6e05\u55ae\u5217\u8868 UKStockInfo"},{"location":"tutor/UnitedKingdomStock/#ukstockprice","text":"import requests import pandas as pd url = 'http://api.finmindtrade.com/api/v2/data?dataset=UKStockPrice&stock_id=BP.L&date=2019-01-01' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) Adj_Close Close High ... Volume date stock_id 0 497.866 507.3 509.6 ... 33397201 2019 - 01 - 02 BP . L 1 499.240 508.7 514.4 ... 38347439 2019 - 01 - 03 BP . L 2 511.115 520.8 524.5 ... 34897489 2019 - 01 - 04 BP . L 3 511.115 520.8 524.4 ... 32659884 2019 - 01 - 07 BP . L 4 510.134 519.8 528.2 ... 28449464 2019 - 01 - 08 BP . L","title":"\u82f1\u570b\u80a1\u50f9\u8cc7\u6599\u8868 UKStockPrice"},{"location":"tutor/UnitedStatesStock/","text":"\u5728\u7f8e\u570b\u80a1\u7968\u5e02\u5834\uff0c\u6211\u5011\u64c1\u6709 1 \u7a2e\u8cc7\u6599\u96c6\uff0c\u5982\u4e0b: \u7f8e\u570b\u80a1\u50f91\u5206\u8cc7\u6599\u8868 USStockPriceMinute \u53e6\u5916\u91dd\u5c0d\u8cc7\u6599\u96c6\u6574\u7406\u51fa\u7684\u5217\u8868\u5982\u4e0b: \u7f8e\u570b\u80a1\u7968\u6e05\u55ae\u5217\u8868 USStockInfo \u6839\u64da\u4e0a\u8ff0\u8cc7\u6599\u8868\u9010\u4e00\u8aaa\u660e\u600e\u9ebc\u4f7f\u7528\uff0c\u53e6\u5916\u5177\u9ad4\u8cc7\u6599\u8868 schemas \u8acb\u53c3\u8003 finmindapi \u7f8e\u570b\u80a1\u7968\u6e05\u55ae\u5217\u8868 USStockInfo \u00b6 \u9019\u5f35\u8cc7\u6599\u8868\u4e3b\u8981\u662f\u5217\u51fa\u7f8e\u570b\u6240\u6709\u4e0a\u5e02\u4e0a\u6ac3\u7684\u80a1\u7968\u540d\u7a31\uff0c\u4ee3\u78bc\u548c\u7522\u696d\u985e\u5225 import requests import pandas as pd url = 'http://api.finmindtrade.com/api/v2/data?dataset=USStockInfo' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date ... stock_name 0 2019 - 01 - 11 ... Dow Jones Industrial Average 1 2019 - 01 - 10 ... sp500 2 2019 - 01 - 11 ... NASDAQ Composite 3 2019 - 01 - 01 ... PHLX Semiconductor 4 None ... CBOE Volatility Index \u7f8e\u570b\u80a1\u50f91\u5206\u8cc7\u6599\u8868 USStockPriceMinute \u00b6 import requests import pandas as pd url = 'http://api.finmindtrade.com/api/v2/data?dataset=USStockPriceMinute&stock_id=^DJI&date=2019-01-01' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date stock_id close ... low open volume 0 2020 - 02 - 13 20 : 02 : 00 ^ DJI 29491.0 ... 29491.0 29510.4 708882 1 2020 - 02 - 13 20 : 03 : 00 ^ DJI 29490.5 ... 29477.4 29483.9 766202 2 2020 - 02 - 13 20 : 04 : 00 ^ DJI 29468.7 ... 29467.3 29490.0 577330 3 2020 - 02 - 13 20 : 05 : 00 ^ DJI 29474.1 ... 29465.8 29468.0 439754 4 2020 - 02 - 13 20 : 06 : 00 ^ DJI 29473.3 ... 29473.3 29474.7 412897","title":"UnitedStatesStock"},{"location":"tutor/UnitedStatesStock/#usstockinfo","text":"\u9019\u5f35\u8cc7\u6599\u8868\u4e3b\u8981\u662f\u5217\u51fa\u7f8e\u570b\u6240\u6709\u4e0a\u5e02\u4e0a\u6ac3\u7684\u80a1\u7968\u540d\u7a31\uff0c\u4ee3\u78bc\u548c\u7522\u696d\u985e\u5225 import requests import pandas as pd url = 'http://api.finmindtrade.com/api/v2/data?dataset=USStockInfo' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date ... stock_name 0 2019 - 01 - 11 ... Dow Jones Industrial Average 1 2019 - 01 - 10 ... sp500 2 2019 - 01 - 11 ... NASDAQ Composite 3 2019 - 01 - 01 ... PHLX Semiconductor 4 None ... CBOE Volatility Index","title":"\u7f8e\u570b\u80a1\u7968\u6e05\u55ae\u5217\u8868 USStockInfo"},{"location":"tutor/UnitedStatesStock/#1-usstockpriceminute","text":"import requests import pandas as pd url = 'http://api.finmindtrade.com/api/v2/data?dataset=USStockPriceMinute&stock_id=^DJI&date=2019-01-01' data = requests . get ( url ) data = data . json () data = pd . DataFrame ( data [ 'data' ]) print ( data . head ()) date stock_id close ... low open volume 0 2020 - 02 - 13 20 : 02 : 00 ^ DJI 29491.0 ... 29491.0 29510.4 708882 1 2020 - 02 - 13 20 : 03 : 00 ^ DJI 29490.5 ... 29477.4 29483.9 766202 2 2020 - 02 - 13 20 : 04 : 00 ^ DJI 29468.7 ... 29467.3 29490.0 577330 3 2020 - 02 - 13 20 : 05 : 00 ^ DJI 29474.1 ... 29465.8 29468.0 439754 4 2020 - 02 - 13 20 : 06 : 00 ^ DJI 29473.3 ... 29473.3 29474.7 412897","title":"\u7f8e\u570b\u80a1\u50f91\u5206\u8cc7\u6599\u8868 USStockPriceMinute"},{"location":"tutor/data/","text":"Financial Data \u00b6 More than ten kinds financial data. Every day update. Financial Visualize At least five kinds Visualize tools on every data. (In development) Financial Mining Holistic financial analysis. (In development) Getting started \u00b6 from FinMind.Data import Load import datetime date = '2018-12-13' print ( 'load TaiwanStockInfo' ) TaiwanStockInfo = Load . FinData ( dataset = 'TaiwanStockInfo' ) print ( TaiwanStockInfo [: 5 ] ) load TaiwanStockInfo stock_id stock_name kinds 0 1201 \u5473\u5168 \u98df\u54c1\u5de5\u696d 1 1203 \u5473\u738b \u98df\u54c1\u5de5\u696d 2 1210 \u5927\u6210 \u98df\u54c1\u5de5\u696d 3 1213 \u5927\u98f2 \u98df\u54c1\u5de5\u696d 4 1215 \u535c\u8702 \u98df\u54c1\u5de5\u696d print ( 'load TaiwanStockPrice {} ' . format ( TaiwanStockInfo . loc [ 2 , 'stock_id' ])) TaiwanStockPrice = Load . FinData ( dataset = 'TaiwanStockPrice' , select = TaiwanStockInfo . loc [ 2 , 'stock_id' ], #select = ['1210'], date = date ) print ( TaiwanStockPrice [: 5 ] ) load TaiwanStockPrice 1210 Open High Low Close Adj_Close Volume date stock_id 0 32.5 33.20 32.30 33.00 33.00 1668333 2018 - 12 - 13 1210 1 33.3 35.05 33.25 33.95 33.95 3916120 2018 - 12 - 14 1210 2 34.5 35.50 34.35 34.35 34.35 4543063 2018 - 12 - 17 1210 3 34.4 34.85 32.80 32.80 32.80 3726316 2018 - 12 - 18 1210 4 33.0 33.40 32.30 32.75 32.75 1887001 2018 - 12 - 19 1210 The parameter table is what dataset been load. The function FinData is load taiwan stock prices by selecting TaiwanStockInfo.loc[2,'stock_id'] and date >= '2018-12-13', or you can load some stock id like 1210 . print ( 'load GovernmentBonds list' ) GovernmentBonds_list = Load . FinDataList ( dataset = 'GovernmentBonds' ) print ( GovernmentBonds_list [: 5 ] ) print ( 'load GovernmentBonds {} ' . format ( GovernmentBonds_list [ 3 ])) GovernmentBonds = Load . FinData ( dataset = 'GovernmentBonds' , select = GovernmentBonds_list [ 3 ], date = date ) print ( GovernmentBonds [: 5 ] ) load GovernmentBonds list [ 'Canada 1-Month' , 'Canada 1-Year' , 'Canada 10-Year' , 'Canada 2-Month' , 'Canada 2-Year' ] load GovernmentBonds Canada 2 - Month date Price Open High Low ChangePercent bound_type 0 2018 - 12 - 13 1.630 1.625 1.630 1.62 0.0000 Canada 2 - Month 1 2018 - 12 - 14 1.630 1.625 1.630 1.62 0.0000 Canada 2 - Month 2 2018 - 12 - 17 1.625 1.630 1.635 1.62 - 0.0031 Canada 2 - Month 3 2018 - 12 - 18 1.625 1.630 1.630 1.62 0.0000 Canada 2 - Month 4 2018 - 12 - 19 1.625 1.620 1.625 1.62 0.0000 Canada 2 - Month The function FinDataList is load GovernmentBonds_list. The function FinData is load GovernmentBonds by selecting Canada 2-Month and date >= '2018-12-13'. more can follow deom.py in my github.","title":"Data"},{"location":"tutor/data/#financial-data","text":"More than ten kinds financial data. Every day update. Financial Visualize At least five kinds Visualize tools on every data. (In development) Financial Mining Holistic financial analysis. (In development)","title":"Financial Data"},{"location":"tutor/data/#getting-started","text":"from FinMind.Data import Load import datetime date = '2018-12-13' print ( 'load TaiwanStockInfo' ) TaiwanStockInfo = Load . FinData ( dataset = 'TaiwanStockInfo' ) print ( TaiwanStockInfo [: 5 ] ) load TaiwanStockInfo stock_id stock_name kinds 0 1201 \u5473\u5168 \u98df\u54c1\u5de5\u696d 1 1203 \u5473\u738b \u98df\u54c1\u5de5\u696d 2 1210 \u5927\u6210 \u98df\u54c1\u5de5\u696d 3 1213 \u5927\u98f2 \u98df\u54c1\u5de5\u696d 4 1215 \u535c\u8702 \u98df\u54c1\u5de5\u696d print ( 'load TaiwanStockPrice {} ' . format ( TaiwanStockInfo . loc [ 2 , 'stock_id' ])) TaiwanStockPrice = Load . FinData ( dataset = 'TaiwanStockPrice' , select = TaiwanStockInfo . loc [ 2 , 'stock_id' ], #select = ['1210'], date = date ) print ( TaiwanStockPrice [: 5 ] ) load TaiwanStockPrice 1210 Open High Low Close Adj_Close Volume date stock_id 0 32.5 33.20 32.30 33.00 33.00 1668333 2018 - 12 - 13 1210 1 33.3 35.05 33.25 33.95 33.95 3916120 2018 - 12 - 14 1210 2 34.5 35.50 34.35 34.35 34.35 4543063 2018 - 12 - 17 1210 3 34.4 34.85 32.80 32.80 32.80 3726316 2018 - 12 - 18 1210 4 33.0 33.40 32.30 32.75 32.75 1887001 2018 - 12 - 19 1210 The parameter table is what dataset been load. The function FinData is load taiwan stock prices by selecting TaiwanStockInfo.loc[2,'stock_id'] and date >= '2018-12-13', or you can load some stock id like 1210 . print ( 'load GovernmentBonds list' ) GovernmentBonds_list = Load . FinDataList ( dataset = 'GovernmentBonds' ) print ( GovernmentBonds_list [: 5 ] ) print ( 'load GovernmentBonds {} ' . format ( GovernmentBonds_list [ 3 ])) GovernmentBonds = Load . FinData ( dataset = 'GovernmentBonds' , select = GovernmentBonds_list [ 3 ], date = date ) print ( GovernmentBonds [: 5 ] ) load GovernmentBonds list [ 'Canada 1-Month' , 'Canada 1-Year' , 'Canada 10-Year' , 'Canada 2-Month' , 'Canada 2-Year' ] load GovernmentBonds Canada 2 - Month date Price Open High Low ChangePercent bound_type 0 2018 - 12 - 13 1.630 1.625 1.630 1.62 0.0000 Canada 2 - Month 1 2018 - 12 - 14 1.630 1.625 1.630 1.62 0.0000 Canada 2 - Month 2 2018 - 12 - 17 1.625 1.630 1.635 1.62 - 0.0031 Canada 2 - Month 3 2018 - 12 - 18 1.625 1.630 1.630 1.62 0.0000 Canada 2 - Month 4 2018 - 12 - 19 1.625 1.620 1.625 1.62 0.0000 Canada 2 - Month The function FinDataList is load GovernmentBonds_list. The function FinData is load GovernmentBonds by selecting Canada 2-Month and date >= '2018-12-13'. more can follow deom.py in my github.","title":"Getting started"}]}